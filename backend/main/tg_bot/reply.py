from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton,WebAppInfo
from main.tg_bot.database import *


def admin_panel() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.button(text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='statistics')
    keyboard.button(text='–†–∞—Å—Å—ã–ª–∫–∞', callback_data='mailing')
    keyboard.button(text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='add_position')
    keyboard.button(text='–£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é', callback_data='delete_position')
    return keyboard.adjust(1).as_markup()

def order_delivered(num) -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.button(text='–ó–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω', callback_data=f'order_d_{num}')
    return keyboard.adjust(1).as_markup()




start_menu = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='–ù–∞—á–∞—Ç—å üçï',  web_app=WebAppInfo(text='–ù–∞—á–∞—Ç—å',url='https://pizzafresca.ru'))
        ],
        [
            KeyboardButton(text='–ú–æ–∏ –∑–∞–∫–∞–∑—ã ‚ÑπÔ∏è')
        ],
    ],
    resize_keyboard=True
)

def get_order_post() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()
    # url: str = 'https://www.figma.com/design/DZ86D3MECMXG1bEdZH1WgB/Untitled?node-id=0-1&t=GDOZf8b5XlANPEzd-0'

    keyboard.button(text='–ó–∞–∫–∞–∑–∞—Ç—å', web_app=WebAppInfo(text='–ó–∞–∫–∞–∑–∞—Ç—å',url='https://google.com') )
    return keyboard.adjust(1).as_markup()


ORDERS_PER_PAGE = 25

async def list_orders(tg_id, page=1) -> InlineKeyboardMarkup:
    start_idx = (page - 1) * ORDERS_PER_PAGE
    end_idx = start_idx + ORDERS_PER_PAGE

    orders = await fetch_orders(tg_id, start_idx, end_idx)
    total_orders = await count_orders(tg_id)

    keyboard = InlineKeyboardBuilder()
    for order in orders:
        a = str(order.get_status_display())
        if a=="Cooking":
            a="–í –≥–æ—Ç–æ–≤–∫–µ"
        elif a=="Delivery":
            a="–í –¥–æ—Å—Ç–∞–≤–∫–µ"
        elif a=="Received":
            a="–î–æ—Å—Ç–∞–≤–ª–µ–Ω"    
        m = str(order.date.month)
        d = str(order.date.day)
        if len(m)==1:
            m = '0' + m
        if len(d)==1:
            d = '0' + d
        keyboard.button(
            text=f'{order.summa}‚ÇΩ - {a} ({d}.{m})',
            callback_data=f'order_{order.id}'
        )

    if page > 1:
        keyboard.button(text='‚è™ –ù–∞–∑–∞–¥', callback_data=f'prev_page_{page-1}')
    if end_idx < total_orders:
        keyboard.button(text='–í–ø–µ—Ä–µ–¥ ‚è©', callback_data=f'next_page_{page+1}')

    return keyboard.adjust(1).as_markup()


def add_categories() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.button(text='–ü–∏—Ü—Ü—ã', callback_data='add_pizza')
    keyboard.button(text='–î–µ—Å–µ—Ä—Ç—ã', callback_data='add_desserts')
    keyboard.button(text='–°–∞–ª–∞—Ç—ã', callback_data='add_salads')
    keyboard.button(text='–°—É–ø—ã', callback_data='add_soups')
    keyboard.button(text='–ù–∞–ø–∏—Ç–∫–∏', callback_data='add_Drinks')
    keyboard.button(text='–í—ã–π—Ç–∏', callback_data='add_come_out')
    return keyboard.adjust(2).as_markup()


def delete_categories() -> InlineKeyboardMarkup:
    keyboard = InlineKeyboardBuilder()

    keyboard.button(text='–ü–∏—Ü—Ü—ã', callback_data='delete_pizza')
    keyboard.button(text='–î–µ—Å–µ—Ä—Ç—ã', callback_data='delete_desserts')
    keyboard.button(text='–°–∞–ª–∞—Ç—ã', callback_data='delete_salads')
    keyboard.button(text='–°—É–ø—ã', callback_data='delete_soups')
    keyboard.button(text='–ù–∞–ø–∏—Ç–∫–∏', callback_data='delete_Drinks')
    keyboard.button(text='–í—ã–π—Ç–∏', callback_data='delete_come_out')
    return keyboard.adjust(2).as_markup()


def offer_cancel() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)


def choice_button_yes() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–î–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç—å')
    keyboard.button(text='–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)
def post_type() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç')
    keyboard.button(text='–° —Ñ–æ—Ç–æ')
    return keyboard.as_markup(resize_keyboard=True)


def choice_button_no() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–î–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç—å')
    keyboard.button(text='–ù–µ—Ç, –≤–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)


def skip_geo2() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    return keyboard.as_markup(resize_keyboard=True)

def shipping_method() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='üöö –î–æ—Å—Ç–∞–≤–∫–∞')
    keyboard.button(text='üìç –°–∞–º–æ–≤—ã–≤–æ–∑')
    return keyboard.as_markup(resize_keyboard=True)


get_geo = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='‚ùóÔ∏è –ü—Ä–∏—Å–ª–∞—Ç—å –∞–¥—Ä–µ—Å', request_location=True)
        ],
        [
            KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
        ],
    ],
    resize_keyboard=True
)

def fast_delivery() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ')
    keyboard.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)


get_number = ReplyKeyboardMarkup(
    keyboard=[
        [
            KeyboardButton(text='üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω', request_contact=True)
        ],
        [
            KeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å—Å—è')
        ],
    ],
    resize_keyboard=True
)


def get_comment() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    keyboard.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)


def payments() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardBuilder()

    keyboard.button(text='–°–±–µ—Ä–±–∞–Ω–∫')
    keyboard.button(text='–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏')
    keyboard.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è')
    return keyboard.as_markup(resize_keyboard=True)
